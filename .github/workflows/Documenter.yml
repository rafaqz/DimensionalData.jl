# Sample workflow for building and deploying a VitePress site to GitHub Pages
#
name: Deploy documentation

on:
  push:
    branches: 
      - main
  pull_request:
  tags: 
    - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  actions: write # useful to delete gh cache
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Not needed if lastUpdated is not enabled
      # - uses: pnpm/action-setup@v2 # Uncomment this if you're using pnpm
      # - uses: oven-sh/setup-bun@v1 # Uncomment this if you're using Bun
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
            node-version: 20
            cache: npm # or pnpm / yarn
            cache-dependency-path: 'package-lock.json' # this should be a package-lock.json file
      - name: Install dependencies
        run: cd docs; npm install; cd .. # or pnpm install / yarn install / bun install
      - name: Set up Julia
        uses: julia-actions/setup-julia@v1
      - name: Pull Julia cache
        uses: julia-actions/cache@v1
      - name: Install documentation dependencies
        run: julia --project=docs -e 'using Pkg; pkg"add https://github.com/LuxDL/DocumenterVitepress.jl.git"; pkg"dev ."; Pkg.instantiate(); Pkg.precompile(); Pkg.status()'
      - name: Generate example md files
        run: |
          julia --project=docs/ --color=yes docs/logo.jl
          julia --project=docs/ --color=yes docs/make.jl
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # For authentication with GitHub Actions token
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }} # For authentication with SSH deploy key
          JULIA_DEBUG: "Documenter"
          DATADEPS_ALWAYS_ACCEPT: true
        run: |
          julia --project=docs/ --color=yes docs/make.jl # this should ideally AUTO-DEPLOY!
